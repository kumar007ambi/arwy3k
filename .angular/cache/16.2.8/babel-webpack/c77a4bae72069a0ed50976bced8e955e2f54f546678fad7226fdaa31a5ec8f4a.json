{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ProfileEditorComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 18);\n    i0.ɵɵtext(2, \"Alias:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"alias-\", i_r2, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"alias-\", i_r2, \"\");\n    i0.ɵɵproperty(\"formControlName\", i_r2);\n  }\n}\nexport class ProfileEditorComponent {\n  // profileForm = this.fb.group({\n  //   firstName: ['', Validators.required],\n  //   lastName: ['',Validators.required],\n  //   address: this.fb.group({\n  //     street: [''],\n  //     city: [''],\n  //     state: [''],\n  //     zip: ['']\n  //   }),\n  //   aliases: this.fb.array([\n  //     this.fb.control('')\n  //   ])\n  // });\n  // get aliases() {\n  //   return this.profileForm.get('aliases') as FormArray;\n  // }\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {}\n  updateProfile() {\n    this.profileForm.patchValue({\n      firstName: 'Nancy',\n      lastName: 'Mathew',\n      address: {\n        street: '123 Drew Street',\n        city: 'Kolkata',\n        state: 'West Bengal',\n        zip: '700091'\n      }\n    });\n  }\n  // addAlias() {\n  //   this.aliases.push(this.fb.control(''));\n  // }\n  onSubmit() {\n    // TODO: Use EventEmitter with form value\n    console.warn(this.profileForm.value);\n  }\n  static #_ = this.ɵfac = function ProfileEditorComponent_Factory(t) {\n    return new (t || ProfileEditorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfileEditorComponent,\n    selectors: [[\"app-profile-editor\"]],\n    decls: 40,\n    vars: 7,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"first-name\"], [\"id\", \"first-name\", \"type\", \"text\", \"formControlName\", \"firstName\", \"required\", \"\"], [\"for\", \"last-name\"], [\"id\", \"last-name\", \"type\", \"text\", \"formControlName\", \"lastName\"], [\"formGroupName\", \"address\"], [\"for\", \"street\"], [\"id\", \"street\", \"type\", \"text\", \"formControlName\", \"street\"], [\"for\", \"city\"], [\"id\", \"city\", \"type\", \"text\", \"formControlName\", \"city\"], [\"for\", \"state\"], [\"id\", \"state\", \"type\", \"text\", \"formControlName\", \"state\"], [\"for\", \"zip\"], [\"id\", \"zip\", \"type\", \"text\", \"formControlName\", \"zip\"], [\"formArrayName\", \"aliases\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"for\"], [\"type\", \"text\", 3, \"id\", \"formControlName\"]],\n    template: function ProfileEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProfileEditorComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"First Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Last Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"h2\");\n        i0.ɵɵtext(9, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Street: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementStart(13, \"label\", 8);\n        i0.ɵɵtext(14, \"City: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementStart(16, \"label\", 10);\n        i0.ɵɵtext(17, \"State: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 11);\n        i0.ɵɵelementStart(19, \"label\", 12);\n        i0.ɵɵtext(20, \"Zip Code: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 14)(23, \"h2\");\n        i0.ɵɵtext(24, \"Aliases\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function ProfileEditorComponent_Template_button_click_25_listener() {\n          return ctx.addAlias();\n        });\n        i0.ɵɵtext(26, \"+ Add another alias\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, ProfileEditorComponent_div_27_Template, 4, 3, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"p\");\n        i0.ɵɵtext(29, \"Complete the form to enable button.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 17);\n        i0.ɵɵtext(31, \"Submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(32, \"hr\");\n        i0.ɵɵelementStart(33, \"p\");\n        i0.ɵɵtext(34);\n        i0.ɵɵpipe(35, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"p\");\n        i0.ɵɵtext(37);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function ProfileEditorComponent_Template_button_click_38_listener() {\n          return ctx.updateProfile();\n        });\n        i0.ɵɵtext(39, \"Update Profile\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"ngForOf\", ctx.aliases.controls);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.profileForm.valid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Form Value: \", i0.ɵɵpipeBind1(35, 5, ctx.profileForm.value), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Form Status: \", ctx.profileForm.status, \"\");\n      }\n    },\n    dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i2.JsonPipe],\n    styles: [\"\\n\\n\\nform[_ngcontent-%COMP%] {\\n  padding-top: 1rem;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin: .5em 0;\\n  font-weight: bold;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZmlsZS1lZGl0b3IvcHJvZmlsZS1lZGl0b3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7O0FBRWhEO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsY0FBYztFQUNkLGNBQWM7RUFDZCxpQkFBaUI7QUFDbkI7OztBQUdBOzs7O0NBSUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBQcm9maWxlRWRpdG9yQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXHJcblxyXG5mb3JtIHtcclxuICBwYWRkaW5nLXRvcDogMXJlbTtcclxufVxyXG5cclxubGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbjogLjVlbSAwO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG5cclxuLypcclxuQ29weXJpZ2h0IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcblVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXRcclxuY2FuIGJlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcclxuKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate1","i_r2","ɵɵproperty","ProfileEditorComponent","constructor","fb","ngOnInit","updateProfile","profileForm","patchValue","firstName","lastName","address","street","city","state","zip","onSubmit","console","warn","value","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","ProfileEditorComponent_Template","rf","ctx","ɵɵlistener","ProfileEditorComponent_Template_form_ngSubmit_0_listener","ProfileEditorComponent_Template_button_click_25_listener","addAlias","ɵɵtemplate","ProfileEditorComponent_div_27_Template","ProfileEditorComponent_Template_button_click_38_listener","aliases","controls","valid","ɵɵtextInterpolate1","ɵɵpipeBind1","status"],"sources":["/home/kumar007ambi/arwy3k/src/app/profile-editor/profile-editor.component.ts","/home/kumar007ambi/arwy3k/src/app/profile-editor/profile-editor.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-profile-editor',\r\n  templateUrl: './profile-editor.component.html',\r\n  styleUrls: ['./profile-editor.component.css']\r\n})\r\nexport class ProfileEditorComponent implements OnInit{\r\n  profileForm:FormGroup|any;\r\n  // profileForm = this.fb.group({\r\n  //   firstName: ['', Validators.required],\r\n  //   lastName: ['',Validators.required],\r\n    \r\n  //   address: this.fb.group({\r\n  //     street: [''],\r\n  //     city: [''],\r\n  //     state: [''],\r\n  //     zip: ['']\r\n  //   }),\r\n  //   aliases: this.fb.array([\r\n  //     this.fb.control('')\r\n  //   ])\r\n  // });\r\n\r\n  // get aliases() {\r\n  //   return this.profileForm.get('aliases') as FormArray;\r\n  // }\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n  ngOnInit(): void {\r\n\r\n    \r\n  }\r\n\r\n  updateProfile() {\r\n    this.profileForm.patchValue({\r\n      firstName: 'Nancy',\r\n      lastName:'Mathew',\r\n      address: {\r\n        street: '123 Drew Street',\r\n        city: 'Kolkata',\r\n        state: 'West Bengal',\r\n        zip: '700091'\r\n      }\r\n    });\r\n  }\r\n\r\n  // addAlias() {\r\n  //   this.aliases.push(this.fb.control(''));\r\n  // }\r\n\r\n  onSubmit() {\r\n    // TODO: Use EventEmitter with form value\r\n    console.warn(this.profileForm.value);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\r\n  <label for=\"first-name\">First Name: </label>\r\n  <input id=\"first-name\" type=\"text\" formControlName=\"firstName\" required>\r\n\r\n  <label for=\"last-name\">Last Name: </label>\r\n  <input id=\"last-name\" type=\"text\" formControlName=\"lastName\">\r\n\r\n  <div formGroupName=\"address\">\r\n    <h2>Address</h2>\r\n\r\n    <label for=\"street\">Street: </label>\r\n    <input id=\"street\" type=\"text\" formControlName=\"street\">\r\n\r\n    <label for=\"city\">City: </label>\r\n    <input id=\"city\" type=\"text\" formControlName=\"city\">\r\n\r\n    <label for=\"state\">State: </label>\r\n    <input id=\"state\" type=\"text\" formControlName=\"state\">\r\n\r\n    <label for=\"zip\">Zip Code: </label>\r\n    <input id=\"zip\"type=\"text\" formControlName=\"zip\">\r\n  </div>\r\n\r\n  <div formArrayName=\"aliases\">\r\n    <h2>Aliases</h2>\r\n    <button type=\"button\" (click)=\"addAlias()\">+ Add another alias</button>\r\n\r\n    <div *ngFor=\"let alias of aliases.controls; let i=index\">\r\n      <!-- The repeated alias template -->\r\n      <label for=\"alias-{{ i }}\">Alias:</label>\r\n      <input id=\"alias-{{ i }}\" type=\"text\" [formControlName]=\"i\">\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <p>Complete the form to enable button.</p>\r\n  <button type=\"submit\" [disabled]=\"!profileForm.valid\">Submit</button>\r\n</form>\r\n\r\n<hr>\r\n\r\n<p>Form Value: {{ profileForm.value | json }}</p>\r\n\r\n<p>Form Status: {{ profileForm.status }}</p>\r\n\r\n<button type=\"button\" (click)=\"updateProfile()\">Update Profile</button>\r\n\r\n\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n-->"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}