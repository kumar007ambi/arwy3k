{"ast":null,"code":"import { FormControl, Validators, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nexport class NameEditorComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.form = this.fb.group({\n      name: ['', [Validators.required]],\n      val: ['', [Validators.pattern(\"^[0-9]*$\")]],\n      email: [''],\n      address: new FormGroup({\n        street: new FormControl(''),\n        city: new FormControl(''),\n        state: new FormControl(''),\n        zip: new FormControl('')\n      })\n    });\n  }\n  static #_ = this.ɵfac = function NameEditorComponent_Factory(t) {\n    return new (t || NameEditorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NameEditorComponent,\n    selectors: [[\"app-name-editor\"]],\n    decls: 32,\n    vars: 6,\n    consts: [[3, \"formGroup\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"required\", \"\", \"formControlName\", \"name\"], [\"for\", \"val\"], [\"id\", \"val\", \"type\", \"number\", \"required\", \"\", \"formControlName\", \"val\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"required\", \"\", \"formControlName\", \"email\"], [\"formGroupName\", \"address\"], [\"for\", \"street\"], [\"id\", \"street\", \"type\", \"text\", \"formControlName\", \"street\"], [\"for\", \"city\"], [\"id\", \"city\", \"type\", \"text\", \"formControlName\", \"city\"], [\"for\", \"state\"], [\"id\", \"state\", \"type\", \"text\", \"formControlName\", \"state\"], [\"for\", \"zip\"], [\"id\", \"zip\", \"type\", \"text\", \"formControlName\", \"zip\"], [\"type\", \"button\", 3, \"disabled\"]],\n    template: function NameEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Number: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementStart(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Email: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"h2\");\n        i0.ɵɵtext(12, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Street: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementStart(16, \"label\", 10);\n        i0.ɵɵtext(17, \"City: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 11);\n        i0.ɵɵelementStart(19, \"label\", 12);\n        i0.ɵɵtext(20, \"State: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 13);\n        i0.ɵɵelementStart(22, \"label\", 14);\n        i0.ɵɵtext(23, \"Zip Code: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"p\");\n        i0.ɵɵtext(26);\n        i0.ɵɵpipe(27, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"p\");\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 16);\n        i0.ɵɵtext(31, \"Update Name\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(26);\n        i0.ɵɵtextInterpolate1(\" Value: \", i0.ɵɵpipeBind1(27, 4, ctx.form.value), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Status \", ctx.form.status, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i2.JsonPipe],\n    styles: [\"label[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  padding-bottom: .5rem;\\n  padding-top: 1rem;\\n  display: inline-block;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  max-width: 300px;\\n}\\n\\n #val[_ngcontent-%COMP%]{\\n  height: 28px;\\n  width: 388px;\\n}\\n\\n#valNumber[_ngcontent-%COMP%]{\\n  height: 28px;\\n  width: 388px;\\n}\\n#email[_ngcontent-%COMP%]{\\n  height: 28px;\\n  width: 388px;\\n} \\n\\n\\n\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmFtZS1lZGl0b3IvbmFtZS1lZGl0b3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQixxQkFBcUI7RUFDckIsaUJBQWlCO0VBQ2pCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7Q0FFQztFQUNDLFlBQVk7RUFDWixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkOzs7QUFHQTs7OztDQUlDIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIHBhZGRpbmctYm90dG9tOiAuNXJlbTtcclxuICBwYWRkaW5nLXRvcDogMXJlbTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWF4LXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxuICN2YWx7XHJcbiAgaGVpZ2h0OiAyOHB4O1xyXG4gIHdpZHRoOiAzODhweDtcclxufVxyXG5cclxuI3ZhbE51bWJlcntcclxuICBoZWlnaHQ6IDI4cHg7XHJcbiAgd2lkdGg6IDM4OHB4O1xyXG59XHJcbiNlbWFpbHtcclxuICBoZWlnaHQ6IDI4cHg7XHJcbiAgd2lkdGg6IDM4OHB4O1xyXG59IFxyXG5cclxuXHJcbi8qXHJcbkNvcHlyaWdodCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxyXG5Vc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0XHJcbmNhbiBiZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXHJcbiovIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","FormGroup","NameEditorComponent","constructor","fb","form","group","name","required","val","pattern","email","address","street","city","state","zip","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","NameEditorComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","value","status","valid"],"sources":["/home/kumar007ambi/arwy3k/src/app/name-editor/name-editor.component.ts","/home/kumar007ambi/arwy3k/src/app/name-editor/name-editor.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormBuilder, Validators, FormGroup  } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-name-editor',\r\n  templateUrl: './name-editor.component.html',\r\n  styleUrls: ['./name-editor.component.css']\r\n})\r\nexport class NameEditorComponent {\r\n  constructor(private fb:FormBuilder){}\r\n  form = this.fb.group({\r\n    name : ['',[Validators.required]],\r\n    val : ['',[Validators.pattern(\"^[0-9]*$\")]],\r\n    email : [''],\r\n    address: new FormGroup({\r\n      street: new FormControl(''),\r\n      city: new FormControl(''),\r\n      state: new FormControl(''),\r\n      zip: new FormControl(''),\r\n    }),\r\n  })\r\n \r\n  // get name(){\r\n  //   return this.form.get('name');\r\n  // }\r\n\r\n  // get val(){\r\n  //   return this.form.get('val');\r\n  // }\r\n\r\n  // get email(){\r\n  //   return this.form.get('email');\r\n  // }\r\n\r\n\r\n  // updateName() {\r\n  //   this.name.setValue('Nancy');\r\n  //   this.email.setValue('test@gamil.com'),\r\n  // }\r\n  // onSubmit() {\r\n  //   console.log()\r\n  // }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","<form [formGroup]=\"form\" >\r\n<label for=\"name\">Name: </label>\r\n<input id=\"name\" type=\"text\" required  formControlName=\"name\" />\r\n\r\n<label for=\"val\">Number: </label>\r\n<input id=\"val\" type=\"number\" required formControlName=\"val\" />\r\n\r\n<label for=\"email\">Email: </label>\r\n<input id=\"email\" type=\"email\" required  formControlName=\"email\" />\r\n\r\n<div formGroupName=\"address\">\r\n    <h2>Address</h2>\r\n    <label for=\"street\">Street: </label>\r\n    <input id=\"street\" type=\"text\" formControlName=\"street\">\r\n  \r\n    <label for=\"city\">City: </label>\r\n    <input id=\"city\" type=\"text\" formControlName=\"city\">\r\n  \r\n    <label for=\"state\">State: </label>\r\n    <input id=\"state\" type=\"text\" formControlName=\"state\">\r\n  \r\n    <label for=\"zip\">Zip Code: </label>\r\n    <input id=\"zip\" type=\"text\" formControlName=\"zip\">\r\n  </div>\r\n\r\n\r\n<p> Value: {{ form.value  | json}}</p>\r\n<p> Status {{ form.status }}</p>\r\n<!-- <p>Number Value: {{ val.value }}</p>\r\n<p>Email Value: {{ email.value }}</p> -->\r\n\r\n\r\n<button type=\"button\"  [disabled]=\"!form.valid\" >Update Name</button>\r\n</form>\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n-->\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}